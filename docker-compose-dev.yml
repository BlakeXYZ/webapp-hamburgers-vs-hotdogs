x-build-args: &build_args
  INSTALL_PYTHON_VERSION: "3.12"
  INSTALL_NODE_VERSION: "20"

x-default-volumes: &default_volumes
  volumes:
    - ./:/app
    - node-modules:/app/node_modules
    - ./dev.db:/tmp/dev.db

# Build flask-dev environment using powershell (not in ubuntu, wsl shell)
# cmd: docker compose up flask-dev
services:
  flask-dev:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    image: "webapp_hamburg_vs_hotdog-development"
    ports:
      - "8080:5000"
      - "2992:2992"
    <<: *default_volumes


  # manage service for running Flask commands
  # can find commands in commands.py
  # e.g. test or lint functions
  # command line compose example:
  ####cmd: docker-compose run --rm manage test
  ####cmd: docker-compose run --rm manage lint
  manage:
    build:
      context: .
      target: development
      args:
        <<: *build_args
    entrypoint: flask
    environment:
      FLASK_ENV: development
      FLASK_DEBUG: 0
    image: "webapp_hamburg_vs_hotdog-manage"
    stdin_open: true
    tty: true
    <<: *default_volumes

volumes:
  node-modules:
