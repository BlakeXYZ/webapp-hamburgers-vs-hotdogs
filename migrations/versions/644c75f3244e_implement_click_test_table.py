"""implement Click Test table

Revision ID: 644c75f3244e
Revises: 
Create Date: 2025-08-20 02:44:00.078018

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '644c75f3244e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contestant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contestant_name', sa.String(length=64), nullable=False),
    sa.Column('contestant_description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('contestant', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_contestant_contestant_name'), ['contestant_name'], unique=True)

    op.create_table('users',
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('password', sa.LargeBinary(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('matchup',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contestant_a_id', sa.Integer(), nullable=False),
    sa.Column('contestant_b_id', sa.Integer(), nullable=False),
    sa.CheckConstraint('contestant_a_id != contestant_b_id', name='ck_no_self_matchup'),
    sa.ForeignKeyConstraint(['contestant_a_id'], ['contestant.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['contestant_b_id'], ['contestant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contestant_a_id', 'contestant_b_id', name='uq_matchup_pair')
    )
    with op.batch_alter_table('matchup', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_matchup_contestant_a_id'), ['contestant_a_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_matchup_contestant_b_id'), ['contestant_b_id'], unique=False)

    op.create_table('roles',
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('vote',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('matchup_id', sa.Integer(), nullable=False),
    sa.Column('contestant_id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.String(length=64), nullable=False),
    sa.Column('country_code', sa.String(length=2), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['contestant_id'], ['contestant.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['matchup_id'], ['matchup.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('matchup_id', 'session_id', name='uq_vote_matchup_session')
    )
    with op.batch_alter_table('vote', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vote_contestant_id'), ['contestant_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vote_country_code'), ['country_code'], unique=False)
        batch_op.create_index(batch_op.f('ix_vote_matchup_id'), ['matchup_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vote_session_id'), ['session_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vote_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('vote', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vote_timestamp'))
        batch_op.drop_index(batch_op.f('ix_vote_session_id'))
        batch_op.drop_index(batch_op.f('ix_vote_matchup_id'))
        batch_op.drop_index(batch_op.f('ix_vote_country_code'))
        batch_op.drop_index(batch_op.f('ix_vote_contestant_id'))

    op.drop_table('vote')
    op.drop_table('roles')
    with op.batch_alter_table('matchup', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_matchup_contestant_b_id'))
        batch_op.drop_index(batch_op.f('ix_matchup_contestant_a_id'))

    op.drop_table('matchup')
    op.drop_table('users')
    with op.batch_alter_table('contestant', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_contestant_contestant_name'))

    op.drop_table('contestant')
    # ### end Alembic commands ###
